import streamlit as st
from pathlib import Path
import base64
from PIL import Image

def display_data_explorer_project():
    """Affiche la pr√©sentation des projets professionnels avec un syst√®me d'onglets"""
    
    st.markdown("""
        <h1 style='margin-bottom: 1.5rem;'>üíº Mes Projets Professionnels</h1>
    """, unsafe_allow_html=True)
    
    # Onglets principaux pour les projets
    project_tabs = st.tabs(["üìä Explorateur de Donn√©es", "üåê InnovaWeb"])
    
    # Premier onglet : Explorateur de Donn√©es
    with project_tabs[0]:
        display_data_explorer()
    
    # Deuxi√®me onglet : InnovaWeb
    with project_tabs[1]:
        display_innovaweb()

def display_data_explorer():
    """Affiche la pr√©sentation du projet Explorateur de Donn√©es"""
    
    st.markdown("""
        <h2 style='margin-bottom: 1rem;'>üìä Explorateur de Donn√©es</h2>
        <p class="subtitle">Une application interactive d'analyse exploratoire de donn√©es</p>
    """, unsafe_allow_html=True)
    
    # Pr√©sentation du projet
    st.markdown("""
        ## üéØ Objectif du projet
        
        J'ai con√ßu cet outil pour faciliter l'analyse exploratoire 
        de donn√©es √† partir de fichiers CSV et JSON. Elle offre une interface utilisateur intuitive permettant 
        aux utilisateurs, m√™me sans comp√©tences avanc√©es en programmation, d'explorer et de transformer efficacement leurs donn√©es.
        
        Cette application vise √† simplifier le processus d'exploration et de pr√©traitement des donn√©es, 
        √©tapes essentielles dans tout projet d'analyse ou de machine learning, en offrant des outils 
        visuels et interactifs accessibles via une interface web.
                
        Jeu de donn√©es utilis√© : [**"Titanic"**](https://www.kaggle.com/c/titanic/data)

    """)
    
    # Afficher l'image principale
    try:
        image_path = Path(".assets/data_explorer_home.jpg")
        if image_path.exists():
            img = Image.open(image_path)
            # Utilisation du param√®tre use_container_width au lieu de use_column_width
            st.image(img, caption="Interface principale de l'Explorateur de Donn√©es", use_container_width=True)
        else:
            st.info("üì∏ Aper√ßu de l'application non disponible")
    except Exception as e:
        st.warning(f"Impossible de charger l'image: {e}")
    
    # Principales fonctionnalit√©s
    st.markdown("## üé¨ Principales fonctionnalit√©s")
    
    # Onglets pour les vid√©os de d√©mo - Ordre modifi√©
    tabs = st.tabs(["Chargement des donn√©es", "Gestion des valeurs manquantes", "Visualisations", 
                   "Transformation des variables", "Analyses statistiques"])
    
    # Mise √† jour de l'ordre des vid√©os
    video_files = {
        0: ".assets/data_tool_import.mp4",
        1: ".assets/data_tool_valeurs.mp4",
        2: ".assets/data_tool_visualisation.mp4",
        3: ".assets/data_tool_transform.mp4",
        4: ".assets/data_tool_stats.mp4"
    }
    
    with tabs[0]:
        st.markdown("### 1. Chargement et pr√©visualisation des donn√©es")
        st.markdown("""
            - Importation de fichiers aux formats CSV ou JSON
            - D√©tection automatique de l'encodage des fichiers
            - Aper√ßu configurable (t√™te, queue, √©chantillon)
            - Informations sur la structure du dataset
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[0])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[1]:
        st.markdown("### 2. Gestion des valeurs manquantes")
        st.markdown("""
            - D√©tection et visualisation des patterns de donn√©es manquantes
            - Diff√©rentes strat√©gies de traitement (moyenne, m√©diane, mode, suppression)
            - Application imm√©diate des transformations avec pr√©visualisation
            - Validation et export des donn√©es nettoy√©es
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[1])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[2]:
        st.markdown("### 3. Visualisations interactives")
        st.markdown("""
            - G√©n√©ration automatique d'histogrammes pour toutes les variables num√©riques
            - Cr√©ation de matrices de corr√©lation avec code couleur
            - Visualisation des valeurs manquantes et leur distribution
            - Graphiques personnalisables et exportables
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[2])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[3]:
        st.markdown("### 4. Transformation des variables")
        st.markdown("""
            - Encodage des variables cat√©gorielles (binaire, one-hot, ordinal)
            - Conversion de variables textuelles en variables num√©riques
            - Normalisation des donn√©es (min-max, z-score)
            - Pr√©visualisation des r√©sultats
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[3])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[4]:
        st.markdown("### 5. Analyses statistiques descriptives")
        st.markdown("""
            - Calcul automatique des statistiques de base (moyenne, m√©diane, √©cart-type)
            - Affichage d√©taill√© des distributions pour variables num√©riques et cat√©gorielles
            - Visualisation par colonnes avec des box plots et des histogrammes
            - Identification des tendances et anomalies
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[4])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    # Technologies utilis√©es
    st.markdown("""
        ## üõ†Ô∏è Technologies utilis√©es
        
        Cette application s'appuie sur plusieurs technologies modernes en science des donn√©es :
    """)
    
    tech_col1, tech_col2, tech_col3, tech_col4 = st.columns(4)
    
    with tech_col1:
        st.info("### Streamlit\nFramework Python pour applications web interactives")
    with tech_col2:
        st.info("### Pandas\nManipulation et analyse des donn√©es")
    with tech_col3:
        st.info("### Plotly\nVisualisations interactives avanc√©es")
    with tech_col4:
        st.info("### NumPy\nCalculs num√©riques")

def display_innovaweb():
    """Affiche la pr√©sentation du projet InnovaWeb - cr√©ation de sites web"""
    
    st.markdown("""
        <h2 style='margin-bottom: 1rem;'>üåê InnovaWeb</h2>
        <p class="subtitle">Cr√©ation de sites web professionnels pour PME</p>
    """, unsafe_allow_html=True)
    
    # Bouton "Visiter le site"
    st.markdown("""
        <div style='text-align: center; margin-bottom: 20px;'>
            <a href='https://innovaweb.fr' target='_blank'>
                <button style='
                    background-color: #4696EC;
                    color: white;
                    padding: 10px 20px;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 16px;
                    font-weight: bold;
                    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
                    transition: all 0.3s ease;
                '>
                    üîó Visiter le site
                </button>
            </a>
        </div>
    """, unsafe_allow_html=True)
    
    # Gen√®se du projet
    st.header("üí° Gen√®se du Projet")
    with st.expander("D√©couvrir l'origine du projet", expanded=True):
        # Modification du ratio des colonnes pour doubler la taille de la vid√©o
        col1, col2 = st.columns([1,1.5])
        with col1:
            st.markdown("""
            En √©changeant avec des PME, j'ai identifi√© un besoin : des sites web 
            professionnels √† prix accessibles.
            
            J'ai cr√©√© InnovaWeb pour offrir aux petites structures des sites
            optimis√©s pour convertir les visiteurs en clients.
                        
            - üîç **Accessibilit√©** : Prix abordables
            - üöÄ **Performance** : SEO optimis√©
            """)
        with col2:
            try:
                # Utiliser le fichier vid√©o innovaweb_home.mp4
                video_path = Path(".assets/innovaweb_home.mp4")
                if video_path.exists():
                    st.video(str(video_path))
                else:
                    st.info("üìΩÔ∏è Vid√©o de d√©monstration non disponible")
            except Exception as e:
                st.warning(f"Impossible de charger la vid√©o: {e}")
    
    # NOUVELLE SECTION: Solutions propos√©es
    st.header("üíº Solutions")
    col1, col2 = st.columns([1, 1.8])  # Ratio modifi√© pour agrandir l'image
    
    with col1:
        st.markdown("""
        Dans ce projet entrepreneurial, j'ai d√©velopp√© quatre domaines d'expertise :
        
        **üîπ D√©veloppement Web**
        - Sites vitrines et e-commerce sur mesure
        - Int√©gration de r√©servation et paiement
        
        **üîπ Responsive Design**
        - Adaptation √† tous les appareils
        - Exp√©rience utilisateur optimale
        
        **üîπ Design UI/UX**
        - Interfaces modernes et intuitives
        - Optimisation des taux de conversion
        
        **üîπ Performance Web**
        - Optimisation technique
        - SEO et accessibilit√©
        """)
    
    with col2:
        try:
            # Afficher une image des solutions
            image_path = Path(".assets/innovaweb_solutions.jpg")
            if image_path.exists():
                img = Image.open(image_path)
                st.image(img, caption="Expertise technique", use_container_width=True)
            else:
                st.info("üì∏ Image non disponible")
        except Exception as e:
            st.warning(f"Impossible de charger l'image: {e}")
    
    # NOUVELLE SECTION: Processus
    st.header("‚öôÔ∏è Processus")
    col1, col2 = st.columns([1, 1.8])  # Ratio modifi√© pour agrandir la vid√©o
    
    with col1:
        st.markdown("""
        **M√©thode en 4 √©tapes :**
        
        **1Ô∏è‚É£ √âcoute & D√©couverte**
        Analyse des besoins et objectifs du client.
        
        **2Ô∏è‚É£ Proposition & Maquettes**
        √âlaboration de concepts visuels.
        
        **3Ô∏è‚É£ D√©veloppement & Tests**
        Cr√©ation du site optimis√©.
        
        **4Ô∏è‚É£ Livraison & Formation**
        Formation du client √† l'utilisation.
        """)
    
    with col2:
        try:
            # Afficher une vid√©o du processus
            video_path = Path(".assets/innovaweb_processus.mp4")
            if video_path.exists():
                st.video(str(video_path))
            else:
                st.info("üìΩÔ∏è Vid√©o non disponible")
        except Exception as e:
            st.warning(f"Impossible de charger la vid√©o: {e}")
    
    # NOUVELLE SECTION: Avant-Apr√®s
    st.header("üîÑ Transformations")
    col1, col2 = st.columns([1, 1.8])  # Ratio modifi√© pour agrandir la vid√©o
    
    with col1:
        st.markdown("""
        Les transformations web am√©liorent :
        
        **üîπ Image de marque**
        - Design moderne et professionnel
        - Coh√©rence visuelle
        
        **üîπ Performance**
        - Chargement rapide
        - Optimisation pour mobile
        
        **üîπ Conversion**
        - Parcours utilisateur simplifi√©
        - Appels √† l'action efficaces
        """)
    
    with col2:
        try:
            # Afficher une vid√©o des transformations
            video_path = Path(".assets/avant_apres.mp4")
            if video_path.exists():
                st.video(str(video_path))
            else:
                st.info("üìΩÔ∏è Vid√©o non disponible")
        except Exception as e:
            st.warning(f"Impossible de charger la vid√©o: {e}")
    
    # NOUVELLE SECTION: Chatbot Intelligent
    st.header("ü§ñ Chatbot IA")
    col1, col2 = st.columns([1, 1.8])  # Ratio modifi√© pour agrandir la vid√©o
    
    with col1:
        st.markdown("""
        Le chatbot IA am√©liore l'exp√©rience sur le site web :
        
        - **Assistant 24/7** : R√©ponses instantan√©es
        - **Qualification** : Capture de leads
        - **Multilangue** : Communication globale
        - **√âvolutif** : Apprentissage continu
        """)
    
    with col2:
        try:
            # Afficher une vid√©o du chatbot
            video_path = Path(".assets/innovaweb_chatbot.mp4")
            if video_path.exists():
                st.video(str(video_path))
            else:
                st.info("üìΩÔ∏è Vid√©o non disponible")
        except Exception as e:
            st.warning(f"Impossible de charger la vid√©o: {e}")
    