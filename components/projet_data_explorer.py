import streamlit as st
from pathlib import Path
import base64
from PIL import Image

def display_data_explorer_project():
    """Affiche la pr√©sentation du projet Explorateur de Donn√©es"""
    
    st.markdown("""
        <h1 style='margin-bottom: 1.5rem;'>üìä Explorateur de Donn√©es</h1>
        <p class="subtitle">Une application interactive d'analyse exploratoire de donn√©es</p>
    """, unsafe_allow_html=True)
    
    # Pr√©sentation du projet
    st.markdown("""
        ## üéØ Objectif du projet
        
        J'ai con√ßu cet outil pour faciliter l'analyse exploratoire 
        de donn√©es √† partir de fichiers CSV et JSON. Elle offre une interface utilisateur intuitive permettant 
        aux utilisateurs, m√™me sans comp√©tences avanc√©es en programmation, d'explorer et de transformer efficacement leurs donn√©es.
        
        Cette application vise √† simplifier le processus d'exploration et de pr√©traitement des donn√©es, 
        √©tapes essentielles dans tout projet d'analyse ou de machine learning, en offrant des outils 
        visuels et interactifs accessibles via une interface web.
                
        Jeu de donn√©es utilis√© : [**"Titanic"**](https://www.kaggle.com/c/titanic/data)

    """)
    
    # Afficher l'image principale
    try:
        image_path = Path(".assets/data_explorer_home.jpg")
        if image_path.exists():
            img = Image.open(image_path)
            # Utilisation du param√®tre use_container_width au lieu de use_column_width
            st.image(img, caption="Interface principale de l'Explorateur de Donn√©es", use_container_width=True)
        else:
            st.info("üì∏ Aper√ßu de l'application non disponible")
    except Exception as e:
        st.warning(f"Impossible de charger l'image: {e}")
    
    # Principales fonctionnalit√©s
    st.markdown("## üé¨ Principales fonctionnalit√©s")
    
    # Onglets pour les vid√©os de d√©mo - Ordre modifi√©
    tabs = st.tabs(["Chargement des donn√©es", "Gestion des valeurs manquantes", "Visualisations", 
                   "Transformation des variables", "Analyses statistiques"])
    
    # Mise √† jour de l'ordre des vid√©os
    video_files = {
        0: ".assets/data_tool_import.mp4",
        1: ".assets/data_tool_valeurs.mp4",
        2: ".assets/data_tool_visualisation.mp4",
        3: ".assets/data_tool_transform.mp4",
        4: ".assets/data_tool_stats.mp4"
    }
    
    with tabs[0]:
        st.markdown("### 1. Chargement et pr√©visualisation des donn√©es")
        st.markdown("""
            - Importation de fichiers aux formats CSV ou JSON
            - D√©tection automatique de l'encodage des fichiers
            - Aper√ßu configurable (t√™te, queue, √©chantillon)
            - Informations sur la structure du dataset
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[0])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[1]:
        st.markdown("### 2. Gestion des valeurs manquantes")
        st.markdown("""
            - D√©tection et visualisation des patterns de donn√©es manquantes
            - Diff√©rentes strat√©gies de traitement (moyenne, m√©diane, mode, suppression)
            - Application imm√©diate des transformations avec pr√©visualisation
            - Validation et export des donn√©es nettoy√©es
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[1])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[2]:
        st.markdown("### 3. Visualisations interactives")
        st.markdown("""
            - G√©n√©ration automatique d'histogrammes pour toutes les variables num√©riques
            - Cr√©ation de matrices de corr√©lation avec code couleur
            - Visualisation des valeurs manquantes et leur distribution
            - Graphiques personnalisables et exportables
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[2])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[3]:
        st.markdown("### 4. Transformation des variables")
        st.markdown("""
            - Encodage des variables cat√©gorielles (binaire, one-hot, ordinal)
            - Conversion de variables textuelles en variables num√©riques
            - Normalisation des donn√©es (min-max, z-score)
            - Pr√©visualisation des r√©sultats
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[3])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    with tabs[4]:
        st.markdown("### 5. Analyses statistiques descriptives")
        st.markdown("""
            - Calcul automatique des statistiques de base (moyenne, m√©diane, √©cart-type)
            - Affichage d√©taill√© des distributions pour variables num√©riques et cat√©gorielles
            - Visualisation par colonnes avec des box plots et des histogrammes
            - Identification des tendances et anomalies
        """)
        # Afficher la vid√©o si elle existe
        video_path = Path(video_files[4])
        if video_path.exists():
            st.video(video_path)
        else:
            st.info("Vid√©o de d√©monstration non disponible")
    
    # Technologies utilis√©es
    st.markdown("""
        ## üõ†Ô∏è Technologies utilis√©es
        
        Cette application s'appuie sur plusieurs technologies modernes en science des donn√©es :
    """)
    
    tech_col1, tech_col2, tech_col3, tech_col4 = st.columns(4)
    
    with tech_col1:
        st.info("### Streamlit\nFramework Python pour applications web interactives")
    with tech_col2:
        st.info("### Pandas\nManipulation et analyse des donn√©es")
    with tech_col3:
        st.info("### Plotly\nVisualisations interactives avanc√©es")
    with tech_col4:
        st.info("### NumPy\nCalculs num√©riques")
    